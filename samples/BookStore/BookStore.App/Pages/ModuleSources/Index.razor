@page "/modulesources/{id:guid}"
@inherits ComponentBase<ModuleSourceModel>
@functions{
    [Parameter] private Guid Id { get; set; }

    protected override async ValueTask<ModuleSourceModel>
        LoadModelAsync(CancellationToken cancellation)
    {
        var queryResult = await MessageDispatcher.QueryByIdAsync<ModuleSourceModel>
            (Id, cancellation);
        return EvaluateQueryResult(queryResult);
    }

    public async Task RenameAsync()
    {
        var command = new ModuleSourceRenameCommand(Id, Model.ConcurrencyToken, Model.Name);
        var commandResult = await MessageDispatcher.DispatchAsync(command); // TODO: Cancellation
        EvaluateCommandResult(commandResult);
    }
}

<div class="container">
    @if (IsLoading)
    {
        <h2>Loading...</h2>
    }
    else
    {
        <EditForm Model="Model" OnValidSubmit="RenameAsync">
            <div class="form-group">
                <label for="Name">Name</label>
                <InputText Id="Name" bind-Value="@Model.Name" class="form-control" />
            </div>
            <div class="form-group">
                <label for="Location">Location</label>
                <input Id="Location" value="@Model.Location" class="form-control" readonly />
            </div>
            <div>
                <a href="/modulesources" class="btn btn-primary">Back</a>
                <input type="submit" value="Save" class="btn btn-primary" />
                <a href="/modulesources/delete/@Model.Id" class="btn btn-danger float-right">Delete</a>
            </div>

        </EditForm>
    }
</div>
