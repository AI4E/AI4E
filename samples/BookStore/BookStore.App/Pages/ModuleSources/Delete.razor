@page "/modulesources/delete/{id:guid}"
@inherits ComponentBase<ModuleSourceDeleteModel>
@inject IUriHelper UriHelper
@functions{
    [Parameter] private Guid Id { get; set; }

    protected override async ValueTask<ModuleSourceDeleteModel>
        LoadModelAsync(CancellationToken cancellation)
    {
        var queryResult = await MessageDispatcher.QueryByIdAsync<ModuleSourceDeleteModel>
            (Id, cancellation);
        return EvaluateQueryResult(queryResult);
    }

    public async Task DeleteAsync()
    {
        var command = new ModuleSourceDeleteCommand(Id, Model.ConcurrencyToken);
        var commandResult = await MessageDispatcher.DispatchAsync(command); // TODO: Cancellation

        if (commandResult.IsSuccess)
        {
            UriHelper.NavigateTo("/modulesources");
        }
        else
        {
            EvaluateCommandResult(commandResult);
        }
    }
}

<div class="container">
    @if (IsLoading)
    {
        <h2>Loading...</h2>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            Do you really want to delete the module source <code>@Model.Name</code>?<br />
            This action cannot be undone.
        </div>

        <a href="modulesources/@Model.Id" class="btn btn-primary">Back</a>
        <button class="btn btn-danger" onclick="@DeleteAsync">Delete</button>
    }
</div>
