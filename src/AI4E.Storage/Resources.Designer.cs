//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AI4E.Storage {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AI4E.Storage.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding commit &apos;{0} with {1} events to stream &apos;{2}&apos;. ähnelt.
        /// </summary>
        internal static string AddingCommitsToStream {
            get {
                return ResourceManager.GetString("AddingCommitsToStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding a snapshot for stream &apos;{0}&apos; at revision &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string AddingSnapshot {
            get {
                return ResourceManager.GetString("AddingSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object has already been disposed. ähnelt.
        /// </summary>
        internal static string AlreadyDisposed {
            get {
                return ResourceManager.GetString("AlreadyDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appending uncommitted event to stream &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string AppendingUncommittedToStream {
            get {
                return ResourceManager.GetString("AppendingUncommittedToStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempting to append commit &apos;{0}&apos; to stream &apos;{1}&apos; at position &apos;{2}&apos;. ähnelt.
        /// </summary>
        internal static string AttemptingToCommit {
            get {
                return ResourceManager.GetString("AttemptingToCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempting to commit all changes on stream &apos;{0}&apos; to the underlying store. ähnelt.
        /// </summary>
        internal static string AttemptingToCommitChanges {
            get {
                return ResourceManager.GetString("AttemptingToCommitChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Building a commit attempt &apos;{0}&apos; on stream &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string BuildingCommitAttempt {
            get {
                return ResourceManager.GetString("BuildingCommitAttempt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clearing all uncommitted changes on stream &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string ClearingUncommittedChanges {
            get {
                return ResourceManager.GetString("ClearingUncommittedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pipeline hook of type &apos;{0}&apos; rejected attempt &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string CommitRejectedByPipelineHook {
            get {
                return ResourceManager.GetString("CommitRejectedByPipelineHook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Committing attempt &apos;{0}&apos; which contains {1} events to the underlying persistence engine. ähnelt.
        /// </summary>
        internal static string CommittingAttempt {
            get {
                return ResourceManager.GetString("CommittingAttempt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Converting an Event from &apos;{0}&apos; to &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string ConvertingEvent {
            get {
                return ResourceManager.GetString("ConvertingEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating stream &apos;{0}&apos; in bucket &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string CreatingStream {
            get {
                return ResourceManager.GetString("CreatingStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting stream &apos;{0}&apos; from bucket &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string DeletingStream {
            get {
                return ResourceManager.GetString("DeletingStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dispatching message to /dev/null. ähnelt.
        /// </summary>
        internal static string DispatchingToDevNull {
            get {
                return ResourceManager.GetString("DispatchingToDevNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disposing engine. ähnelt.
        /// </summary>
        internal static string DisposingEngine {
            get {
                return ResourceManager.GetString("DisposingEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting all commits from bucket &apos;{0}&apos; since checkpoint &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string GettingAllCommitsFromBucketAndCheckpoint {
            get {
                return ResourceManager.GetString("GettingAllCommitsFromBucketAndCheckpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting all commits since checkpoint &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string GettingAllCommitsFromCheckpoint {
            get {
                return ResourceManager.GetString("GettingAllCommitsFromCheckpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting all commits for stream &apos;{0}&apos; between &apos;{1}&apos; and &apos;{2}&apos;. ähnelt.
        /// </summary>
        internal static string GettingAllCommitsFromRevision {
            get {
                return ResourceManager.GetString("GettingAllCommitsFromRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting all commits from bucket &apos;{0}&apos; from &apos;{1}&apos; forward. ähnelt.
        /// </summary>
        internal static string GettingAllCommitsFromTime {
            get {
                return ResourceManager.GetString("GettingAllCommitsFromTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting all commits from bucket &apos;{0}&apos; from &apos;{1}&apos; to &apos;{2}&apos;. ähnelt.
        /// </summary>
        internal static string GettingAllCommitsFromToTime {
            get {
                return ResourceManager.GetString("GettingAllCommitsFromToTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting the most recent snapshot from bucket &apos;{0}&apos; for stream &apos;{1}&apos; on/since revision &apos;{2}&apos;. ähnelt.
        /// </summary>
        internal static string GettingSnapshotForStream {
            get {
                return ResourceManager.GetString("GettingSnapshotForStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting the set of all streams to be snapshot from bucket &apos;{0}&apos; which exceed {1} revisions without a snapshot. ähnelt.
        /// </summary>
        internal static string GettingStreamsToSnapshot {
            get {
                return ResourceManager.GetString("GettingStreamsToSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting undispatched commits from persistence engine. ähnelt.
        /// </summary>
        internal static string GettingUndispatchedCommits {
            get {
                return ResourceManager.GetString("GettingUndispatchedCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignoring some events on commit &apos;{0}&apos; of stream &apos;{1}&apos; because they starting before revision {2}. ähnelt.
        /// </summary>
        internal static string IgnoringBeforeRevision {
            get {
                return ResourceManager.GetString("IgnoringBeforeRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignoring some events on commit &apos;{0}&apos; of stream &apos;{1}&apos; because they go beyond revision {2}. ähnelt.
        /// </summary>
        internal static string IgnoringBeyondRevision {
            get {
                return ResourceManager.GetString("IgnoringBeyondRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing engine. ähnelt.
        /// </summary>
        internal static string InitializingEngine {
            get {
                return ResourceManager.GetString("InitializingEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing persistence engine. ähnelt.
        /// </summary>
        internal static string InitializingPersistence {
            get {
                return ResourceManager.GetString("InitializingPersistence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pushing commit &apos;{0}&apos; to post-commit hook of type &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string InvokingPostCommitPipelineHooks {
            get {
                return ResourceManager.GetString("InvokingPostCommitPipelineHooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pushing commit &apos;{0}&apos; to pre-commit hook of type &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string InvokingPreCommitHooks {
            get {
                return ResourceManager.GetString("InvokingPreCommitHooks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Marking commit &apos;{0}&apos; as dispatched. ähnelt.
        /// </summary>
        internal static string MarkingAsDispatched {
            get {
                return ResourceManager.GetString("MarkingAsDispatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Marking commit &apos;{0}&apos; as dispatched. ähnelt.
        /// </summary>
        internal static string MarkingCommitAsDispatched {
            get {
                return ResourceManager.GetString("MarkingCommitAsDispatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no outstanding changes to be committed stream &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string NoChangesToCommit {
            get {
                return ResourceManager.GetString("NoChangesToCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No other commits have been discovered that conflict for stream &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string NoConflicts {
            get {
                return ResourceManager.GetString("NoConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Purging all commits on stream &apos;{0}&apos; from tracking. ähnelt.
        /// </summary>
        internal static string NoLongerTrackingStream {
            get {
                return ResourceManager.GetString("NoLongerTrackingStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The stream revision must be a positive number. ähnelt.
        /// </summary>
        internal static string NonPositiveRevisionNumber {
            get {
                return ResourceManager.GetString("NonPositiveRevisionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The commit sequence must be a positive number. ähnelt.
        /// </summary>
        internal static string NonPositiveSequenceNumber {
            get {
                return ResourceManager.GetString("NonPositiveSequenceNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opening stream &apos;{0}&apos; from bucket &apos;{1}&apos; between revisions {2} and {3}. ähnelt.
        /// </summary>
        internal static string OpeningStreamAtRevision {
            get {
                return ResourceManager.GetString("OpeningStreamAtRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opening stream &apos;{0}&apos; with snapshot at {1} up to revision {2}. ähnelt.
        /// </summary>
        internal static string OpeningStreamWithSnapshot {
            get {
                return ResourceManager.GetString("OpeningStreamWithSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verifying that no other commits have succeed on the stream &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string OptimisticConcurrencyCheck {
            get {
                return ResourceManager.GetString("OptimisticConcurrencyCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pushing attempt &apos;{0}&apos; on stream &apos;{1}&apos; to the underlying store. ähnelt.
        /// </summary>
        internal static string PersistingCommit {
            get {
                return ResourceManager.GetString("PersistingCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more pipeline hooks filtered out the commit. ähnelt.
        /// </summary>
        internal static string PipelineHookFilteredCommit {
            get {
                return ResourceManager.GetString("PipelineHookFilteredCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pipeline hook of type &apos;{0}&apos; skipped over commit &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string PipelineHookSkippedCommit {
            get {
                return ResourceManager.GetString("PipelineHookSkippedCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Purging all data from storage. ähnelt.
        /// </summary>
        internal static string PurgingStore {
            get {
                return ResourceManager.GetString("PurgingStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The collection is read only and cannot be modified. ähnelt.
        /// </summary>
        internal static string ReadOnlyCollection {
            get {
                return ResourceManager.GetString("ReadOnlyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving all {0} undispatched commits. ähnelt.
        /// </summary>
        internal static string RetrievingUndispatchedCommits {
            get {
                return ResourceManager.GetString("RetrievingUndispatchedCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The stream revision must always be greater than or equal to the commit sequence. ähnelt.
        /// </summary>
        internal static string RevisionTooSmall {
            get {
                return ResourceManager.GetString("RevisionTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scheduling commit &apos;{0}&apos; for delivery. ähnelt.
        /// </summary>
        internal static string SchedulingDelivery {
            get {
                return ResourceManager.GetString("SchedulingDelivery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scheduling commit &apos;{0}&apos; to be dispatched. ähnelt.
        /// </summary>
        internal static string SchedulingDispatch {
            get {
                return ResourceManager.GetString("SchedulingDispatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down dispatcher. ähnelt.
        /// </summary>
        internal static string ShuttingDownDispatcher {
            get {
                return ResourceManager.GetString("ShuttingDownDispatcher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down dispatch scheduler. ähnelt.
        /// </summary>
        internal static string ShuttingDownDispatchScheduler {
            get {
                return ResourceManager.GetString("ShuttingDownDispatchScheduler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shutting down event store. ähnelt.
        /// </summary>
        internal static string ShuttingDownStore {
            get {
                return ResourceManager.GetString("ShuttingDownStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting dispatch scheduler. ähnelt.
        /// </summary>
        internal static string StartingDispatchScheduler {
            get {
                return ResourceManager.GetString("StartingDispatchScheduler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tracking commit {0} on stream &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string TrackingCommit {
            get {
                return ResourceManager.GetString("TrackingCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tracking up to {0} streams. ähnelt.
        /// </summary>
        internal static string TrackingStreams {
            get {
                return ResourceManager.GetString("TrackingStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configured dispatcher of type &apos;{0}&apos; was unable to dispatch commit &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string UnableToDispatch {
            get {
                return ResourceManager.GetString("UnableToDispatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to mark commit &apos;{0}&apos; as dispatched, the underlying storage has already been disposed ähnelt.
        /// </summary>
        internal static string UnableToMarkDispatched {
            get {
                return ResourceManager.GetString("UnableToMarkDispatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The underlying stream &apos;{0}&apos; has changed since the last known commit, refreshing the stream. ähnelt.
        /// </summary>
        internal static string UnderlyingStreamHasChanged {
            get {
                return ResourceManager.GetString("UnderlyingStreamHasChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating stream head for stream &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string UpdatingStreamHead {
            get {
                return ResourceManager.GetString("UpdatingStreamHead", resourceCulture);
            }
        }
    }
}
