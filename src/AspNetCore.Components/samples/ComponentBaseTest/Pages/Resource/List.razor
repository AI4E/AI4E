@page "/resource/list"
@inherits ListComponentBase<Resource>
@inject IMessageDispatcher MessageDispatcher
@code {
    protected override async ValueTask<List<Resource>?> LoadModelAsync(CancellationToken cancellation)
    {
        var message = new Query<IEnumerable<Resource>>();
        var dispatchResult = await MessageDispatcher.DispatchAsync(message, cancellation);
        return await EvaluateLoadResultAsync(dispatchResult);
    }
}

<div class="container">
    <h3>Resources</h3>
    @if (IsLoading)
    {
        <div>Loading...</div>
    }
    else if (Model.Count > 0)
    {
        <ul>
            @foreach (var resource in Model)
            {
                <li>
                    <a href="/resource/@resource.Id">@resource.Name</a>
                </li>
            }
        </ul>
    }
    else
    {
        <div>
            No resources to show.
        </div>
    }
    <div>
        <a href="/resource/create" class="btn btn-primary">Create new</a>
    </div>
</div>
